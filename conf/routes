# Routes

GET         /                                                                       controllers.HomeController.index

# Service worker, etc.

#GET         /service-worker.js                                      controllers.Assets.at(path="/public", file="serviceWorker.js")
#GET         /manifest.json                                          controllers.Assets.at(path="/public", file="wuekabel.webmanifest")
#GET         /sw.js                                                  controllers.Assets.at(path="/public", file="sw.js")

# User management

GET         /registerForm                                                           controllers.LoginController.registerForm
POST        /register                                                               controllers.LoginController.register
GET         /loginForm                                                              controllers.LoginController.loginForm
POST        /login                                                                  controllers.LoginController.login
GET         /logout                                                                 controllers.LoginController.logout

GET         /user                                                                   controllers.HomeController.userPage

GET         /acceptDPS                                                              controllers.HomeController.acceptDPS

GET         /changePwForm                                                           controllers.LoginController.changePwForm
POST        /changePw                                                               controllers.LoginController.changePw

# LTI

+ nocsrf
POST        /lti                                                                    controllers.LtiController.lti

+ nocsrf
POST        /registerAsLtiProvider                                                  controllers.LtiController.registerAsLtiProvider

# Admin routes

GET         /admin/courses                                                          controllers.AdminController.index

GET         /admin/courses/newCourseForm                                            controllers.AdminController.newCourseForm
POST        /admin/courses                                                          controllers.AdminController.newCourse

GET         /admin/courses/:courseId                                                controllers.AdminController.courseAdmin(courseId: Int)

GET         /admin/courses/:courseId/collections/newCollectionForm                  controllers.AdminController.newCollectionForm(courseId: Int)
POST        /admin/courses/:courseId/collections                                    controllers.AdminController.newCollection(courseId: Int)

GET         /admin/courses/:courseId/collections/:collId                            controllers.AdminController.collectionAdmin(courseId: Int, collId: Int)

GET         /admin/courses/:courseId/collections/:collId/uploadCardsFileForm        controllers.AdminController.uploadCardsFileForm(courseId: Int, collId: Int)
POST        /admin/courses/:courseId/collections/:collId/uploadCardsFile            controllers.AdminController.uploadCardsFile(courseId: Int, collId: Int)

# User routes

GET         /registerForCoursesForm                                                 controllers.HomeController.registerForCoursesForm

# Languages

GET         /courses/:courseId                                                      controllers.HomeController.course(courseId: Int)

GET         /courses/:courseId/register                                             controllers.HomeController.registerForCourse(courseId: Int)
GET         /courses/:courseId/unregister                                           controllers.HomeController.unregisterForCourse(courseId: Int)

GET         /courses/:courseId/collections/:collId                                  controllers.HomeController.collection(courseId: Int, collId: Int)

# FIXME: remove cardId...
GET         /courses/:courseId/collections/:collId/learn                            controllers.HomeController.learn(courseId: Int, collId: Int)
GET         /courses/:courseId/collections/:collId/flashcardToLearn                 controllers.HomeController.nextFlashcardToLearn(courseId: Int, collId: Int)

GET         /repeat                                                                 controllers.HomeController.repeat
GET         /flashcardToRepeat                                                      controllers.HomeController.nextFlashcardToRepeat

PUT         /checkSolution                                                          controllers.HomeController.checkSolution

# API

GET         /api/courses                                                            controllers.ApiController.courses
GET         /api/courses/:courseId                                                  controllers.ApiController.course(courseId: Int)
POST        /api/courses                                                            controllers.ApiController.newCourse


# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                                           controllers.Assets.versioned(path="/public", file: Asset)
